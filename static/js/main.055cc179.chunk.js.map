{"version":3,"sources":["components/User.js","loot-util.js","components/Dapp.js","components/HeaderUser.js","components/Spinner.js","components/Nav.js","index.js"],"names":["truncateAddress","address","toLowerCase","concat","slice","length","User","_ref","user","onSelectUser","addressCopyable","miscText","inline","displayedUser","isLoading","setIsLoading","useState","iconURL","createIcon","seed","size","scale","toDataURL","useEffect","isAddress","ens","React","createElement","className","alt","src","profileImage","title","onClick","style","display","alignItems","cursor","window","navigator","clipboard","writeText","Fragment","default","mergeImages","require","daploymentMap","mapping","layersOrder","IMG_DIR","ipfs","character_imgs","getLayers","LOOT","Array","isArray","map","forEach","key","i","console","log","LAYERS","Object","keys","loot_name","loot","parsedName","name","splitName","hasPrefix","prefix","hasSuffix","suffix","plusOne","split","indexOf","trim","parseName","updateLayers","module","exports","getImageForLoot","async","files","layerName","push","file","crossOrigin","itemsFromSvg","svg","startsWith","Error","matches","items","matcher","match","Dapp","Component","constructor","props","super","_getParams","pathname","matchProfile","matchPath","path","params","this","initialState","syntheticLoot","undefined","currentUser","lootImage","searchQuery","userNotFound","ready","networkError","isConnectingWallet","canConnectWallet","state","_onSearch","bind","_onSearchChange","_onSelectUser","_userFromAddress","_refreshCurrentUser","_refreshDisplayedUser","render","Nav","connectWallet","_connectWallet","onSearchChange","onSearchSubmit","Switch","Route","route","justifyContent","marginTop","marginBottom","HeaderUser","provider","_provider","refreshUser","refreshCurrentUser","backgroundColor","borderRadius","width","character","marginLeft","item","height","addressOrENS","textAlign","href","_initialize","componentDidUpdate","prevProps","prevState","location","prevPathname","prevParams","updateUser","ethereum","request","method","setState","history","error","ethers","providers","Web3Provider","JsonRpcProvider","_loadContracts","isConnected","_hasAccountConnected","on","newAddress","_resetState","_ref2","networkId","getSigner","providerOrSigner","chainId","getNetwork","parseInt","getChainId","deploymentMap","contracts","Contract","SyntheticLoot","SyntheticLootArtifact","e","preventDefault","target","value","_userFromENS","userAddress","resolveName","tokenURIB64","tokenURI","b64svg","JSON","parse","Buffer","from","toString","image","lookupAddress","img","_dismissNetworkError","_getRpcErrorMessage","data","message","withRouter","efd","isOwnProfile","SpinnerButton","isSpinning","spinnerStyle","borderColor","children","onSubmit","placeholder","onChange","maxWidth","disabled","ReactDOM","StrictMode","HashRouter","document","getElementById"],"mappings":"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","file":"static/js/main.055cc179.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport \"./User.css\"\nimport { createIcon } from '@download/blockies';\nimport \"./Spinner.css\"\n\nfunction truncateAddress(address) {\n    address = address.toLowerCase()\n    return `${address.slice(0,6)}...${address.slice(address.length-4,address.length)}`\n}\n\nexport function User({user, onSelectUser, addressCopyable=false, miscText, inline=false, displayedUser}) {\n\n    let [isLoading, setIsLoading] = useState(true)\n\n    var iconURL = createIcon({\n        seed: user.address.toLowerCase(),\n        size: 15,\n        scale: 2\n    }).toDataURL()\n\n    useEffect(() => {\n        setIsLoading(false)\n    }, [displayedUser])\n\n    if (inline) {\n        const isAddress = !user.ens\n        return <span className=\"inlineUser\">\n            <img alt={user.address} src={user.profileImage ? user.profileImage : iconURL }></img>\n            <span className={isAddress ? \"address\" : \"\"} title={user.ens || user.address}>{user.ens ? user.ens : truncateAddress(user.address)}</span>\n        </span>\n    }\n\n    return <div className=\"userItem\" onClick={onSelectUser ? () => {\n        onSelectUser(user)\n        setIsLoading(!(displayedUser && displayedUser.address === user.address))\n    } : () => {}}>\n        <div className=\"profileImage\"> \n            {/* https://stackoverflow.com/a/45212793 */}\n            {\n                isLoading ? <div className=\"spinner\"></div> :\n                <img alt={user.address} src={user.profileImage ? user.profileImage : iconURL }></img> \n            }\n        </div>\n        <div className=\"detailContainer\">\n            <div className=\"username\" title={user.ens}>{user.ens}</div>\n            <div style={{display: \"flex\", alignItems: \"center\"}}>\n                <div style={addressCopyable ? {cursor: \"copy\"} : {}} className=\"address\" title={user.address}\n                onClick={addressCopyable ? () => window.navigator.clipboard.writeText(user.address) : () => {}}\n                >{truncateAddress(user.address)}</div>\n                {miscText ? <div className=\"misc\">{miscText}</div> : <></>}\n            </div>\n        </div>\n    </div>\n}\n\nexport default User","const {default:mergeImages} = require(\"merge-images\")\nconst daploymentMap = require(\"./deployments/map.json\")\n\nconst mapping = require(\"./artifacts/item_layer_mapping.json\")\nconst layersOrder = require(\"./artifacts/item_layer_order.json\")\n\nconst IMG_DIR = `ipfs://${daploymentMap.ipfs.character_imgs}`\n\nconst parseName = (name) => {\n  let parsedName = {\n    hasPrefix: false,\n    prefix: \"\",\n    hasSuffix: false,\n    suffix: \"\",\n    plusOne: false,\n    name: \"\"\n  }\n\n  let splitName;\n\n  // Check for prefix\n  if(name[0] === \"\\\"\") {\n    parsedName.hasPrefix = true;\n    splitName = name.split(\"\\\"\");\n    parsedName.prefix = splitName[1];\n    name = splitName[2];  // NOTE - we modify the function arg `name`\n  }\n\n  // Check for suffix\n  if(name.indexOf(\" of \") >= 0) {\n    parsedName.hasSuffix = true;\n    splitName = name.split(\" of \");\n    parsedName.suffix = \"of \" + splitName[1];\n    if(parsedName.suffix.indexOf(\" +1\") >= 0) {\n      parsedName.plusOne = true;\n      parsedName.suffix = parsedName.suffix.split(\" +1\")[0];\n    }\n    name = splitName[0];  // NOTE - we modify the function arg `name`\n  }\n\n  parsedName.name = name.trim();\n\n  return parsedName;\n}\n\nfunction updateLayers(loot_name, loot, LAYERS) {\n  const parsedName = parseName(loot)\n\n  LAYERS[`${loot_name}Name`] = `${IMG_DIR}/${mapping[loot_name]['name'][parsedName['name']]}`\n  \n  // Prefix\n  if (parsedName[\"prefix\"]) {\n    LAYERS[`${loot_name}Prefix`] = `${IMG_DIR}/${mapping[loot_name]['prefix']}`\n  }\n    \n  // Suffix\n  if (parsedName[\"suffix\"]) {\n    LAYERS[`${loot_name}Suffix`] = `${IMG_DIR}/${mapping[loot_name]['suffix'][parsedName['name']][parsedName['suffix']]}`\n  }\n    \n  // +1\n  if (parsedName[\"plus_one\"]) {\n    LAYERS[`${loot_name}PlusOne`] = `${IMG_DIR}/${mapping[loot_name]['plus_one']}`\n  }\n}\n\nfunction getLayers(LOOT) {\n  if (Array.isArray(LOOT)) {\n    const keys = [\"weapon\", \"chest\", \"head\", \"waist\", \"foot\", \"hand\", \"neck\", \"ring\"]\n    const map = {}\n    keys.forEach((key, i) => {\n      map[key] = LOOT[i]\n    })\n    LOOT = map\n  }\n\n  console.log(LOOT)\n\n  const LAYERS = {\n    \"fg\": `${IMG_DIR}/fg.png`, \"bg\": `${IMG_DIR}/bg.png`,   // Foreground & Background are at the root\n    \"weaponName\": null, \"weaponPrefix\": null, \"weaponSuffix\": null, \"weaponPlusOne\": null,\n    \"chestName\": null, \"chestPrefix\": null, \"chestSuffix\": null, \"chestPlusOne\": null,\n    \"headName\": null, \"headPrefix\": null, \"headSuffix\": null, \"headPlusOne\": null,\n    \"waistName\": null, \"waistPrefix\": null, \"waistSuffix\": null, \"waistPlusOne\": null,\n    \"footName\": null, \"footPrefix\": null, \"footSuffix\": null, \"footPlusOne\": null,\n    \"handName\": null, \"handPrefix\": null, \"handSuffix\": null, \"handPlusOne\": null,\n    \"neckName\": null, \"neckPrefix\": null, \"neckSuffix\": null, \"neckPlusOne\": null,\n    \"ringName\": null, \"ringPrefix\": null, \"ringSuffix\": null, \"ringPlusOne\": null,\n  }\n\n  Object.keys(LOOT).forEach(key => updateLayers(key, LOOT[key], LAYERS))\n\n  return LAYERS\n}\n\nasync function getImageForLoot(loot) {\n  let LAYERS = getLayers(loot)\n  let files = []\n  layersOrder.forEach(layerName => {\n    if (LAYERS[layerName]) {\n      files.push(LAYERS[layerName])\n    }\n  })\n\n  files = files.map(file => {\n    if (file.indexOf(\"ipfs://\") > -1) {\n      file = `https://ipfs.io/ipfs/${file.split(\"ipfs://\")[1]}`\n    }\n    console.log(file)\n    return file\n  })\n\n  const b64img = await mergeImages(files, {crossOrigin: \"anonymous\"})\n\n  return b64img\n}\n\n//https://github.com/bpierre/loot-rarity/blob/main/src/image.ts#L24\nfunction itemsFromSvg(svg) {\n  if (!svg.startsWith(\"<svg\")) {\n    throw new Error(\"The svg paramater doesn’t seem to be an SVG\");\n  }\n\n  let matches;\n  const items = [];\n  for (let i = 0; i < 8; i++) {\n    // eslint-disable-next-line\n    const matcher = /<text[^>]+\\>([^<]+)<\\/text>/\n    matches = svg.match(matcher);\n    if (!matches) {\n      if (items.length === 0) {\n        throw new Error(\n          \"Error when parsing the SVG: couldn’t find the next item\"\n        );\n      }\n      // Probably a LootLoose image\n      return items;\n    }\n    items.push(matches[1]);\n    svg = svg.slice(svg.indexOf(matches[0]) + matches[0].length);\n  }\n  return items;\n}\n\nmodule.exports = {getImageForLoot, itemsFromSvg}\n\n","import React from \"react\"\nimport { withRouter, Switch, Route, matchPath } from \"react-router\"\nimport { ethers } from \"ethers\"\n\nimport deploymentMap from \"../deployments/map.json\"\nimport SyntheticLootArtifact from \"../artifacts/contracts/SyntheticLoot/SyntheticLoot.json\"\n\nimport {getImageForLoot, itemsFromSvg} from \"./../loot-util\"\n\nimport { Nav } from \"./Nav\"\nimport HeaderUser from \"./HeaderUser\"\n\nimport \"./App.css\"\nimport \"./Spinner.css\"\n\nasync function getChainId(provider) {\n  const network = await provider.getNetwork()\n  let chainId = network.chainId\n  chainId = parseInt(chainId)\n  return chainId\n}\n\nclass Dapp extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.initialState = {\n      syntheticLoot: undefined,\n      currentUser: undefined,\n      displayedUser: undefined,\n      lootImage: undefined,\n      searchQuery: \"\",\n      userNotFound: false,\n      ready: undefined,\n      networkError: undefined,\n      isConnectingWallet: false,\n      canConnectWallet: false,\n      isLoading: false\n    }\n\n    this.state = this.initialState\n\n    this._onSearch = this._onSearch.bind(this)\n    this._onSearchChange = this._onSearchChange.bind(this)\n    this._onSelectUser = this._onSelectUser.bind(this)\n    this._userFromAddress = this._userFromAddress.bind(this)\n    this._refreshCurrentUser = this._refreshCurrentUser.bind(this)\n    this._refreshDisplayedUser = this._refreshDisplayedUser.bind(this)\n  }\n\n  render() {\n    if (this.state.networkError) {\n      return <div>{this.state.networkError}</div>\n    }\n\n    if (!this.state.syntheticLoot) {\n      return <div>Loading...</div>\n    }\n\n    return (\n      <>\n        <div className=\"App\">\n          <Nav connectWallet={() => this._connectWallet()} \n            isConnectingWallet={this.state.isConnectingWallet}\n            canConnectWallet={this.state.canConnectWallet}\n            currentUser={this.state.currentUser}\n            displayedUser={this.state.displayedUser}\n            searchQuery={this.state.searchQuery}\n            onSearchChange={this._onSearchChange}\n            onSearchSubmit={this._onSearch}\n            onSelectUser={this._onSelectUser} \n          />\n            <Switch>\n              <Route path=\"/account/:addressOrENS\" render={ (route) => {\n                return <div style={{display: \"flex\", justifyContent: \"center\"}}>\n                  <div style={{marginTop: \"50px\", marginBottom: \"50px\"}}>\n                    {\n                      this.state.displayedUser ? <>\n                        <HeaderUser \n                        user={this.state.displayedUser} \n                        currentUser={this.state.currentUser} \n                        provider={this._provider} \n                        refreshUser={this._refreshDisplayedUser}\n                        refreshCurrentUser={this._refreshCurrentUser}\n                        />\n\n                        <div className=\"card\"  style={{backgroundColor: \"white\", marginTop: \"15px\"}}>\n                          <img alt=\"character\" style={{borderRadius: \"5px\", width: \"100%\"}} src={this.state.displayedUser.character}/>\n                          {/* <img alt=\"loot\" style={{borderRadius: \"5px\"}} src={this.state.displayedUser.lootImage}/> */}\n                          <ul style={{marginLeft: \"-20px\"}}>\n                            {this.state.displayedUser.items.map(item => {\n                              return <li key={item}>{item}</li>\n                            })}\n                          </ul>\n                        </div>\n                      </> : \n                      this.state.isLoading ? <div style={{width: \"20px\", height: \"20px\"}} className=\"spinner\"></div> :\n                      this.state.userNotFound ? <>\n                        {route.match.params.addressOrENS} could not be found :/\n                      </> : <></>\n                    }\n                  </div>\n                </div>\n              }}></Route>\n            </Switch>\n        </div>\n        <footer style={{textAlign: \"center\"}}>\n          <div>Created by <a href=\"https://twitter.com/stephancill\">@stephancill</a></div>\n          <div>Inspired by <a href=\"https://lootproject.com\">lootproject.com</a></div>\n          <div>Source on <a href=\"https://github.com/stephancill/synthetic-loot-viewer\">GitHub</a></div>\n          <div>SyntheticLoot 0x869ad3dfb0f9acb9094ba85228008981be6dbdde</div>\n        </footer>\n      </>\n    )\n  }\n\n  async componentDidMount() {\n    this._initialize()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n\n    const { pathname } = this.props.location;\n    const { pathname: prevPathname } = prevProps.location;\n    const params = this._getParams(pathname)\n    const prevParams = this._getParams(prevPathname)\n\n    if (params.addressOrENS) {\n      if (!prevState.ready && this.state.ready) {\n        this.updateUser(params.addressOrENS)\n        return\n      }\n      if (params.addressOrENS === prevParams.addressOrENS) {\n        return\n      }\n      this.updateUser(params.addressOrENS)\n    }\n  }\n\n  _getParams = (pathname) => {\n    const matchProfile = matchPath(pathname, {\n      path: `/account/:addressOrENS`,\n    })\n    return (matchProfile && matchProfile.params) || {}\n  }\n\n  async _hasAccountConnected() {\n    if (!window.ethereum) {\n      return false\n    }\n\n    const accounts = await window.ethereum.request({method: \"eth_accounts\"})\n    return accounts.length > 0\n  }\n\n  async _connectWallet() {\n    this.setState({isConnectingWallet: true})\n    try {\n      const [address] = await window.ethereum.request({ method: 'eth_requestAccounts' })\n      const currentUser = await this._userFromAddress(address)\n      this.setState({currentUser})\n      this.props.history.push(`/account/${currentUser.address}`)\n    } catch (error) {\n      console.error(error)\n    }\n    this.setState({isConnectingWallet: false})\n  }\n\n  async _initialize(currentUser) {\n    if (window.ethereum) {\n      this._provider = new ethers.providers.Web3Provider(window.ethereum)\n      this.setState({canConnectWallet: true})\n    } else {\n      this._provider = new ethers.providers.JsonRpcProvider(\"https://mainnet.infura.io/v3/f29f1c340a60430ebff33f1ed9dad190\")\n    }\n\n    await this._loadContracts(this._provider)\n\n    console.log(\"loaded contract\")\n\n    const isConnected = await this._hasAccountConnected()\n    if (currentUser === undefined) {\n      if (isConnected) {\n        await this._connectWallet()\n      }\n    }\n\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", ([newAddress]) => {\n        if (newAddress === undefined) {\n          return this._resetState()\n        }\n        this._connectWallet()\n      })\n      \n      window.ethereum.on(\"chainChanged\", ([networkId]) => {\n        this._resetState()\n      })\n    }\n\n    if (isConnected) {\n      await this._loadContracts(this._provider.getSigner(0))\n    }\n  }\n\n  async _loadContracts(providerOrSigner) {\n    const chainId = await getChainId(this._provider)\n\n    if(!(chainId in deploymentMap.contracts)) {\n      this.setState({ \n        networkError: \"Contracts not deployed on this network.\"\n      })\n      return\n    }\n\n    const syntheticLoot = new ethers.Contract(\n      deploymentMap.contracts[chainId].SyntheticLoot[0],\n      SyntheticLootArtifact,\n      providerOrSigner\n    )\n\n    console.log(syntheticLoot)\n\n    this.setState({\n      syntheticLoot,\n      ready: true\n    })\n  }\n\n  async _onSelectUser(user) {\n    this.props.history.push(`/account/${user.address}`)\n  }\n\n  async _onSearch(e) {\n    e.preventDefault()\n    this.props.history.push(`/account/${this.state.searchQuery}`)\n    this.setState({searchQuery: \"\", displayedUser: undefined})\n  }\n\n  async _onSearchChange(e) {\n    this.setState({searchQuery: e.target.value})\n  }\n\n  async _refreshCurrentUser() {\n    const currentUser = await this._userFromAddress(this.state.currentUser.address)\n    this.setState({currentUser})\n  } \n\n  async _refreshDisplayedUser() {\n    const displayedUser = await this._userFromAddress(this.state.displayedUser.address)\n    this.setState({displayedUser})\n  }\n\n  async updateUser(addressOrENS) {\n\n    if (this.state.displayedUser && (this.state.displayedUser.address === addressOrENS || this.state.displayedUser.ens === addressOrENS)\n    ) {\n      return\n    }\n\n    this.setState({isLoading: true})\n\n    let user\n    try {\n      if (addressOrENS.slice(0,2) === \"0x\") {\n        user = await this._userFromAddress(addressOrENS)\n      } else {\n        user = await this._userFromENS(addressOrENS)\n      }\n    } catch (error) {\n      console.log(error)\n    }\n\n    if (!user) {\n      if (!this.state.userNotFound) {\n        this.setState({\n          userNotFound: true,\n          displayedUser: null,\n          isLoading: false\n        })\n      }\n      return\n    }\n\n    this.setState({\n      searchQuery: \"\",\n      displayedUser: user, \n      userNotFound: false,\n      isLoading: false\n    })\n  }\n\n  async _userFromENS(name) {\n    const userAddress = await this._provider.resolveName(name);\n    const user = await this._userFromAddress(userAddress)\n    return user\n  }\n\n  async _userFromAddress(address) {\n    const tokenURIB64 = await this.state.syntheticLoot.tokenURI(address)\n    const tokenURI = JSON.parse(Buffer.from(tokenURIB64.split(\",\")[1], 'base64').toString(\"utf8\"))\n    const b64svg = tokenURI.image\n    const svg = Buffer.from(b64svg.split(\",\")[1], 'base64').toString(\"utf8\")\n    const ens = await this._provider.lookupAddress(address);\n\n    const items = itemsFromSvg(svg)\n    console.log(items)\n    const img = await getImageForLoot(items)\n    console.log(img)\n\n    return {\n      address: address.toLowerCase(),\n      lootImage: b64svg,\n      character: img,\n      items,\n      ens\n    }\n  }\n\n  _dismissNetworkError() {\n    this.setState({ networkError: undefined })\n  }\n\n  _getRpcErrorMessage(error) {\n    if (error.data) {\n      return error.data.message\n    }\n\n    return error.message\n  }\n\n  _resetState() {\n    this.setState(this.initialState)\n    this._initialize()\n  }\n}\n\nexport default {\n  Dapp: withRouter(Dapp)\n}","import React from \"react\"\nimport User from \"./User\"\nimport \"./HeaderUser.css\"\nimport \"./Spinner.css\"\n\n\nfunction HeaderUser({user, currentUser, provider, efd, refreshUser, refreshCurrentUser}) {\n    \n    let isOwnProfile = currentUser && user.address.toLowerCase() === currentUser.address.toLowerCase()\n \n\n    return <div className=\"headerUser\">\n        <div style={{display: \"flex\"}}>\n            <div style={{ display: \"inline-block\", alignItems: \"flex-start\"}}>\n                <User user={user} addressCopyable={true} miscText={isOwnProfile ? \"You\" : undefined}></User>\n            </div>            \n        </div>\n    </div>\n}\n\nexport default HeaderUser","import React from \"react\"\nimport \"./Spinner.css\"\n\nexport function SpinnerButton({isSpinning=false, spinnerStyle={}, ...props}) {\n  // TODO: Show transaction hash + link to explorer\n  return <button {...props}>\n    {isSpinning ? <div className=\"spinner\" style={{borderColor: \"rgba(255, 255, 255, 0.2)\", ...spinnerStyle}}></div> : props.children}\n  </button>\n   \n}","import React from \"react\"\nimport { User } from \"./User\"\nimport { SpinnerButton } from \"./Spinner\";\n\nexport function Nav({connectWallet, isConnectingWallet, canConnectWallet, currentUser, onSearchSubmit, onSearchChange, searchQuery, onSelectUser, displayedUser}) {\n  return <nav>\n    <div style={{textAlign: \"left\"}} className=\"navLogo\">\n      <a href=\"/\">synthetic loot viewer</a>\n    </div>\n\n    <div style={{textAlign: \"center\"}} className=\"search\">\n      <form onSubmit={onSearchSubmit}>\n        <input placeholder=\"Search address/ENS\" value={searchQuery} onChange={onSearchChange}></input>\n      </form>\n    </div>\n\n    <div className=\"userItemContainer\">\n      <div style={{marginLeft: \"auto\", maxWidth: \"var(--col-width)\"}}>\n        {currentUser ? \n        <User user={currentUser} onSelectUser={onSelectUser} displayedUser={displayedUser}></User> : \n        <SpinnerButton disabled={!canConnectWallet} className=\"actionButton\" style={{width: \"110px\"}} isSpinning={isConnectingWallet} onClick={connectWallet}>Connect</SpinnerButton>}\n      </div>\n    </div>\n    \n  </nav>;\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\"\nimport Dapp from \"./components/Dapp\";\n\n// This is the entry point of your application, but it just renders the Dapp\n// react component. All of the logic is contained in it.\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Dapp.Dapp />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}